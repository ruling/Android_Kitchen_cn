############################################################################
#
# Copyright (c) 2013 - dsixda (dislam@rocketmail.com)
#
# Android 厨房是100%免费。此脚本文件仅供个人或学习使用
#
############################################################################

#
# 此脚本具有两个可选参数:
#
# $1 = "no_create" or "create" or "create_working 
#         - must specify no_create if working folder already exists
# $2 = "kernel_only" or "name_given" - if this is specified then $1 is mandatory
#

if [ "$1" == "no_create" ] 
then
  build_dir=`ls | grep -m 1 ^WORKING_`

  if [ ! -e $build_dir/system.img.ext4 ]
  then
    echo "错误: 未发现 $build_dir/system.img.ext4!"
    exit 1
  fi

  if [ ! -d $build_dir/system ]
  then
    mkdir $build_dir/system
  fi

  mv $build_dir/system.img.ext4 $build_dir/system

  if [ -e $build_dir/cache.img ]
  then
    mv $build_dir/cache.img -fv $build_dir/cache.img.ext4
  fi

  if [ -e $build_dir/cache.img.ext4 ]
  then
    mv $build_dir/cache.img.ext4 $build_dir/system
  else
    scripts/show_cache_warning cache.img.ext4
  fi

  # Sometimes images have zero permissions set when extracted from TAR archive,
  # making them unreadable!
  chmod -R 777 $build_dir

else

  #
  # 检查 system.img.ext4, tomb.img.ext4, cache.img.ext4 和 boot.img 在 original_update  
  #
  if [ -e original_update/system.img.ext4 ]
  then
    echo "发现 original_update/system.img.ext4"

    if [ -e original_update/tomb.img.ext4 ]
    then
      echo "发现 original_update/tomb.img.ext4"
    fi

    if [ -e original_update/cache.img.ext4 ]
    then
      echo "发现 original_update/cache.img.ext4"
    else
      scripts/show_cache_warning original_update/cache.img.ext4
    fi
  else

    if [ -e original_update/cache.img.ext4 ]
    then
      echo "发现 original_update/cache.img.ext4"
      echo "错误:未发现 original_update/system.img.ext4"
    else
      echo
      echo "错误: 在 original_update 文件夹下未发现 ROM 包!"
    fi

    exit 1
  fi

  if [ -e original_update/boot.img ]
  then
    echo "发现 original_update/boot.img"
  else
    echo "警告: 未发现 original_update/boot.img"
  fi


  #
  # 工作文件夹名称
  #
  build_dir=`scripts/set_working_folder_name $2`

  echo
  echo "创建 Working 文件夹 $build_dir ..."
  mkdir $build_dir
  mkdir $build_dir/system

  # 内核可选
  if [ -e original_update/boot.img ]
  then
    echo "复制 boot.img ..."
    cp original_update/boot.img $build_dir
  fi

fi

echo



if [ "$1" == "no_create" ]
then
  src_dir=$build_dir/system
  hidden_dir=$build_dir
else
  src_dir=original_update
  hidden_dir=$src_dir
fi


system_dir=$build_dir/system


#
# 如有必要编译 simg2img
#

echo
echo "分析 system.img.ext4 ..."
sys_bytes=`od -A n -h -j 0 -N 6 $src_dir/system.img.ext4 | sed 's/ //g'`

if [ -e $src_dir/cache.img.ext4 ]
then
  echo "分析 cache.img.ext4 ..."
  cache_bytes=`od -A n -h -j 0 -N 6 $src_dir/cache.img.ext4 | sed 's/ //g'`
else
  cache_bytes="000000000000"
fi

if [ -e $hidden_dir/tomb.img.ext4 ]
then
  echo "分析 tomb.img.ext4 ..."
  tomb_bytes=`od -A n -h -j 0 -N 6 $hidden_dir/tomb.img.ext4 | sed 's/ //g'`
else
  tomb_bytes="000000000000"
fi




if [ "$sys_bytes" != "000000000000" ] || [ "$cache_bytes" != "000000000000" ] || [ "$tomb_bytes" == "000000000000" ]
then
  echo
  scripts/compile_simg2img
  if [ "$?" == "1" ]
  then
    exit 1
  fi
fi



cd $system_dir

# 获取完整路径
system_dir=`pwd`
cd ../..


#
# 转换 system.img.ext4 为 ext4
#

if [ "$sys_bytes" == "000000000000" ]
then
  cp $src_dir/system.img.ext4 $system_dir/ext4_system.img

else 

  echo
  echo "转换 system.img.ext4 为可解包的格式 ..."
  tools/samsung_files/simg2img_files/simg2img $src_dir/system.img.ext4 \
    $system_dir/ext4_system.img 

  if [ ! -e $system_dir/ext4_system.img ]
  then
    echo "无法转换 system.img.ext4!"
    exit 1
  fi
fi

rm -rf $system_dir/system.img.ext4


#
# 目录树
#

if [ ! -e $build_dir/META-INF/com/google/android/update-script ]
then
  mkdir -p $build_dir/META-INF/com/google/android
  echo
  echo "添加 update-script 脚本..."
  cp tools/update_files/update-script $build_dir/META-INF/com/google/android/
fi


#
# 从 ext4_system.img 提取文件
#

if [ `uname | grep CYGWIN` ]
then
  scripts/show_ext2explore $system_dir ext4_system.img
else
  scripts/extract_ext3_img $system_dir ext4_system.img
fi

cd $system_dir

rm -f ext4_system.img 2>/dev/null
if [ "$?" == "1" ]
then
  echo
  echo "警告： ext4_system.img 正在使用中。应用程序关闭后请手动删除文件."
  echo
fi

cd ..

if [ ! -d system ]
then
  echo
  echo "错误: 未发现 /system 文件夹!"
  exit 1
fi

if [ ! -d system/framework ]
then
  echo
  echo "错误: 未发现 /system/framework 文件夹!"
  exit 1
fi

if [ ! -d system/app ]
then
  echo
  echo "错误: 未发现 /system/app 文件夹!"
  exit 1
fi

if [ "`ls system`" == "" ]
then
  echo 
  echo "错误: /system 文件夹是空的!"
  echo
  exit 1
fi


cd ..

echo
echo "ext4_system.img 文件已完全解压到:"
echo "  $system_dir"

base_dir=`pwd`



scripts/check_galaxy_s2x

if [ "$?" == "1" ]
then
  # Check for /preload
  scripts/check_preload_symlinks $base_dir $system_dir $hidden_dir tomb.img.ext4
fi


# Check for CSC
if [ -e $src_dir/cache.img.ext4 ]
then
  echo
  echo "你想提取 客户软件定制 (CSC)"
  echo -n "从 cache.img.ext4 提取 (y/n)? (默认: y): "

  read do_extract
  echo

  if [ "$do_extract" == "n" ]
  then
    rm -vf $src_dir/cache.img.ext4
    echo
  else

    if [ "$cache_bytes" == "000000000000" ]
    then
      cp -v $src_dir/cache.img.ext4 $system_dir/ext4_cache.img

    else

      #
      # 转换 cache.img.ext4 为 ext4
      #
      echo "转换 cache.img.ext4 为可解包的格式 ..."
      tools/samsung_files/simg2img_files/simg2img $src_dir/cache.img.ext4 \
        $system_dir/ext4_cache.img

      if [ ! -e $system_dir/ext4_cache.img ]
      then
        echo "无法转换 cache.img.ext4!"
        exit 1
      fi
    fi

    rm -rf $system_dir/cache.img.ext4


    #
    # 从 ext4_cache.img 提取文件
    #
    if [ `uname | grep CYGWIN` ]
    then
      scripts/show_linux_reader $system_dir ext4_cache.img
    else
      scripts/extract_ext3_img $system_dir ext4_cache.img
    fi

    cd $system_dir 

    rm -f ext4_cache.img 2>/dev/null
    if [ "$?" == "1" ]
    then
      echo
      echo "警告： ext4_cache.img 正在使用中。应用程序关闭后请手动删除文件."
      echo
    fi

    cd ../..
    scripts/unzip_csc $build_dir
  fi
fi



cd $build_dir

if [ ! -e boot.img ]
then
  cd ..
  scripts/check_no_bootimg
else
  cd ..
fi



#
# update-script 脚本和其他调整
#
if [ "$2" != "kernel_only" ] && [ "$2" != "name_given" ]
then
  scripts/fix_update_script 

  # 修改 update-script 脚本与 Nandroid 备份功能
  scripts/fix_update_script_with_features

  scripts/remove_recovery
fi


echo
echo "$build_dir 列表:"
echo
ls -l $build_dir

echo
echo "完成工作文件夹设置!"

